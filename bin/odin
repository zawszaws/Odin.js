#!/usr/bin/env node

var program = require("commander"),
    mkdirp = require("mkdirp"),
    os = require("os"),
    fs = require("fs"),
    exec = require('child_process').exec,
    requirejs = require("requirejs"),
    
    pkg = require("../package.json"),
    
    version = pkg.version,
    eol = os.EOL,
    path;

program.version( version ).parse( process.argv );

path = program.args.shift() || ".";


(function( path ){
    emptyDirectory( path, function( empty ){
	if( empty || program.force ){
	    createGame( path );
	}
	else{
	    program.confirm("directory is not empty, continue?", function( yes ){
		if( yes ){
		    process.stdin.destroy();
		    createGame( path );
		}
		else{
		    abort("aborting...");
		}
	    });
	}
    });
}( path ));
    

function createClientIndexjs(){
    return [
	'require(',
	'    {',
	'        baseUrl: "./"',
	'    },',
	'    [',
	'        "odin",',
	'    ],',
	'    function( Odin ){',
	'        ',
	'        Odin.globalize();',
	'        ',
	'        game = new ClientGame({',
	'            host: "127.0.0.1",',
	'            port: 3000,',
	'            debug: true',
	'        });',
	'        ',
	'        game.on("init", function(){',
	'            // Client Game goes here',
	'        });',
	'    }',
	');'
    ].join("\n");
}
 

function createClientBuildjs(){
    return [
	'({',
	'    include: "../../requirejs/require.js",',
	'    ',
	'    baseUrl: "./node_modules/odin/src/",',
	'    name: "odin",',
	'    ',
	'    optimize: "uglify2",',
	'    uglify2: {',
	'        warnings: true,',
	'	 mangle: false',
	'    },',
	'    ',
	'    out: "./client/odin.js",',
	'})'
    ].join("\n");
}


function createServerIndexjs(){
    return [
	'var requirejs = require("requirejs"),',
	'    Odin = require("odin");',
	'',
	'requirejs(',
	'    {',
	'        baseUrl: __dirname,',
	'        nodeRequire: require',
	'    },',
	'    function(){',
	'        ',
	'        Odin.globalize();',
	'        ',
	'        var game = new ServerGame({',
	'            host: "127.0.0.1",',
	'            port: 3000,',
	'            debug: true',
	'        });',
	'        ',
	'        game.on("init", function(){',
	'            // Server Game goes here',
	'        });',
	'        ',
	'        game.init();',
	'    }',
	');'
    ].join("\n");
}


function createIndexhtml(){
    
    return [
	'<!DOCTYPE html>',
	'<html>',
	'    <head>',
	'        ',
	'        <meta http-equiv="cleartype" content="on">',
	'        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">',
	'        ',
	'        <meta name="apple-mobile-web-app-status-bar-style" content="black" />',
	'        <meta name="apple-mobile-web-app-capable" content="yes" />',
	'        ',
	'        <meta name="description" content="">',
	'        <meta name="keywords" content="odin.js, odin, game, html5, canvas, webgl">',
	'        ',
	'        <title>Game</title>',
	'        ',
	'        <script src="/socket.io/socket.io.js"></script>',
	'        ',
	'        <script src="./client/odin.js"></script>',
	'        <script src="./client/index.js"></script>',
	'        ',
	'    </head>',
	'    ',
	'    <body></body>',
	'    ',
	'</html>',
    ].join("\n");
};


function createREADMEmd(){
    
    return [
	'Game.js',
	'=======',
	'',
	'2D HTML5 Canvas/WebGL Javascript Game'
    ].join("\n");
};



function createGame( path ){
    
    process.on("exit", function(){
	console.log();
	console.log("    install dependencies:");
	console.log("        $ cd "+ path +"/ && npm install");
	console.log();
	console.log("    start game:");
	console.log("        $ node server/index.js");
	console.log();
    });
    
    mkdir( path +"/assets");
    mkdir( path +"/client", function(){
	write( path +"/client/index.js", createClientIndexjs() );
    });
    
    requirejs.optimize({
	    include: "../node_modules/requirejs/require.js",
	    
	    baseUrl:  __dirname +"/../src/",
	    name: "odin",
	    
	    optimize: "uglify2",
	    uglify2: {
		warnings: true,
		mangle: false
	    },
	    
	    out: path +"/client/odin.js",
	},
	function( buildResponse ){
	    var contents = fs.readFileSync( config.out, "utf8");
	    write( path +"/client/odin.js", contents );
	},
	function( error ){
	    console.log( error );
	}
    );
    
    mkdir( path +"/server", function(){
	write( path +"/server/index.js", createServerIndexjs() );
    });
    
    write( path +"/build.js", createClientBuildjs() );
    
    var pkg = {
	name: "game",
	version: "0.0.1",
	scripts: {
	    start: "node game.js"
	},
	readmeFilename: "README.md",
	dependencies: {
	    requirejs: "~2.1.5",
	    odin: "~"+ version
	}
    };
    
    write( path + "/index.html", createIndexhtml() );
    write( path + "/README.md", createREADMEmd() );
    write( path + "/package.json", JSON.stringify( pkg, null, 2 ) );
}
    
    
function emptyDirectory( path, fn ){
    fs.readdir( path, function( error, files ){
	if( error && "ENOENT" != error.code ){
	    throw error;
	}
	fn( !files || !files.length );
    });
}
    
    
function write( path, str ){
    fs.writeFile( path, str );
    console.log("creating file: "+ path );
}


function mkdir( path, fn ){
    mkdirp( path, 755, function( error ){
	if( error ){
	    throw error;
	}
	console.log("creating dir: "+ path );
	fn && fn();
    });
}


function abort( str ){
    console.error( str );
    process.exit(1);
}


module.exports = program;